<credentials>
	<system name="NE1">
		<ip>cinplgn01</ip>
		<conn_type>ssh</conn_type>
		<timeout>120</timeout>
		<username>hsudarsa</username>
		<password>iloveny.</password>
		<variable_config>../../Config_files/samples/Variable_Sample.xml</variable_config>
		<testdata>../../Config_files/Samples/CLI_Test_Data_Sample.xml</testdata>
	</system>

    <system name="NE2" >
    	<subsystem name="dip" ip="167.254.213.197" conn_type="ssh" ssh_port="22"
	    	username="labadmin" password="labadmin1" prompt="labadmin@rtxdpoe01:"
	    	testdata="../Config_files/Cli_testdata.xml" >
	    </subsystem>

    	<subsystem name="cli" ip="167.254.213.199" conn_type="ssh" ssh_port="22"
	    	username="labadmin" password="labadmin" prompt="labadmin@rtxdpoe03:"
	    	testdata="../Config_files/Cli_testdata.xml" variable_config="../Config_files/Cli_varconfig.xml" 
	    	default="yes">
	    </subsystem>


<!-- 5. Substituting values form environment variables:
Substituting values from environment variables is supported in input datafile

To reference the environment variables use the pattern ${ENV.variable_name}
where variable_name is the name of the variable in the environment settings of the OS
Eg ${ENV.IPADDR} will be replaced with the value of IPADDR variable in the environment settings

  -->

    	<subsystem name="if1">
	    	<ip>${ENV.IPADDR}</ip> 
	    	<conn_type>ssh</conn_type>
	    	<ssh_port>${ENV.SSH_PORT}</ssh_port>
	    	<username>labadmin</username>
	    	<password>labadmin</password>
	    	<prompt>labadmin@rtxdpoe03:</prompt>
	    	<testdata>../Config_files/Cli_testdata.xml</testdata>
	    	<variable_config>../Config_files/Cli_varconfig.xml</variable_config>
	    	<!-- By default the core keywords to send commands from testdata
	    	will use the values provided for the tag/attribute 'testdata' & 'variable_config' 
	    	to get the location of testdata and variable config files.
	    	
	    	If the user wishes to use a different test data or variable config file for a 
	    	particular step in the testcase then they can provide the details in any user-defined
	    	tag/attribute as shown below and provide the name of tag/attribute as value to the
	    	argument td_tag/vc_tag in the steps.
	    	
	    	-->
	    	<td1>../Config_files/Cli_testdata1.xml</td1>
	    	<td2>../Config_files/Cli_testdata2.xml</td2>
	    	<vc1>../Config_files/Cli_varconfig1.xml</vc1>
	    	<vc2>../Config_files/Cli_varconfig2.xml</vc2>
	   	</subsystem>

	</system>

  <Testsets>


<!-- 6. Testsets -->
<!-- This section describes how to provide data for a testset 

a. Data for testset should be provided in the format specified in 
testset config file details on how to provide data for testsets
is available in the test set config sample file (located in ../Config_files/testset_config_sample.xml)

b. This test set config file can be provided as a separate file or the contents of the 
testset config fiel can be provided in this file itself as testset tags as
shown in the example i, ii below.

-->

<!-- i. Refer to an external test set config file -->

    <testset_config_file>../Config_files/testset_config_sample.xml</testset_config_file>


<!-- ii. Provide testset data locally -->
    <test_set name="JDSUTBerd" make="JDSU" model="TBerd" conn_type="telnet" port="8000" ip="167.254.212.185" serial_number="222" >
      <init_parameters function='SONET'  module= 'BERT' application= 'TermOc192Sts192cBert' side= 'OPPS' slice_id= 'SLIC1' signal= 'OC192' rate= 'STS192C'/>
      <data_set>
        
        <condition_name alarm_los="alarm_PHY_LOS" alarm_aisl="alarm_AISL"/>
        <alarm>LOS</alarm>
        <alarm_type>LOS</alarm_type>
        <error_type err_ty1='TSE' err_ty2='error_B1'  err_ty3='error_B2' err_ty4='error_B3' err_ty5='error_CVV' verr_ty1='FAS' verr_ty2='B1'  verr_ty3='B2' verr_ty4='B3'/>
        <insert_rate rate_e9="rate_1E-9" rate_e7="rate_1E-7"></insert_rate>
        <insert_mode mode_rate="insert_RATE" mode_single="insert_SING"></insert_mode>
      </data_set>
    </test_set>

  </Testsets>
</credentials>
