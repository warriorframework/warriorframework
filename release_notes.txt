Release: Ninja
Version: 3.0

===================
1: Release details
===================
This is release Ninja of Warrior Test Automation Framework

-------------------------------
1.1: List of available releases
-------------------------------
1. Ninja = 3.0 to current

==================
2. Version Details
==================
You are on Release Ninja, Version 3.0 of Warrior Framework.
Procedure to get a specific version is available in section-3 of this document.

+++++++++++++++++++++++++++++++++
2.1. Change log for this release
+++++++++++++++++++++++++++++++++

------------------
Hghlight Features:
------------------

[WAR-984] - Added the fast feedback mechanism for failed Cases during Suite execution
[WAR-874] - The ability to verify whether certain value in the response is less than or greater than a specified value
[WAR-752] - Added "iter" functionality in the datafile so that it can work with iterative cases as well

-------------
New Features:
-------------

[WAR-613] - Keyword to separate test files for parallel execution added
[WAR-579] - Keyword to verify if elements are present on the page added to the Warrior Core Selenium Keywords

-------------
Improvements:
-------------

[WAR-452] - New Demo and Sample Cases, Suites, and Projects added in Warrior's Warriorspace
[WAR-1040] - Warrior User Guide updated
[WAR-960] - Moved bottle.py from Utils to OSS
[WAR-961] - Separated non-OSS from OSS related content into separate modules in the actions directory
[WAR-986] - Default value for iteration_type in a step set to Standard
[WAR-971] - Added license files to the Repository
[WAR-988] - Katana can now be started by giving the absolute path of the katana executable.
[WAR-968] - Warhorn updated to handle new structure of Warrior Framework

---------
Bugfixes:
---------
[WAR-977] - node check condition xml_Utils.py corrected
[WAR-1008] - Handled Request_rpc TypeError failure
[WAR-1041] - Handled lxml Import Error

=================================================
3. Procedure to get a specific version of Warrior 
=================================================

1. Clone warrior main
$ git clone http://rtx-swtl-git.fnc.net.local/scm/war/warrior_main.git
2. go to warrior_main directory
$cd warrior_main
3. To check the list of versions available, execute "git tag --list" command
$ git tag --list
3.0
3.1
3.2
3.3
3.4
$
3. To Check the current version you are at, execute "git branch" command
$ git branch
* master
$

- * indicates the active version.
- In the above example master is the active version.
- If the active version is master it means you are using a version of warrior framework that is under development. It is 
not a stable tested version.

4. To switch to a specific version from master, execute 'git checkout <version_name>' command.
$ git checkout 3.4
Note: checking out '3.4'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

git checkout -b <new-branch-name>

HEAD is now at 146313d... reduce command timeout, wait after timeout=60
$

5. Execute git branch command to verify the active version.
$ git branch
* (HEAD detached at 3.4)
master
$ 

- * indicates the active version.
6. Switch from one version to another (current=3.4, switch to 3.3)
$ git checkout 3.3
Previous HEAD position was 146313d... reduce command timeout, wait after timeout=60
HEAD is now at ecb6373... WAR-180, handle nd prompt on timeout
$ 
$ git branch
* (HEAD detached at 3.3)
master
$
7. Switch to master branch again.
$ git checkout master
Previous HEAD position was ecb6373... WAR-180, handle nd prompt on timeout
Switched to branch 'master'
Your branch is up-to-date with 'origin/master'.
$ 
$ 
$ git branch
* master
$